{{- if .Values.operator }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.operator.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    control-plane: {{ .Values.operator.name }}
    release: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      control-plane: {{ .Values.operator.name }}
  replicas: 1
  template:
    metadata:
      labels:
        control-plane: {{ .Values.operator.name }}
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      volumes:
        - name: dockersock
          hostPath:
            path: /var/run
            type: Directory
      containers:
        - command:
            - /manager
          args:
            - --leader-elect
            - --zap-log-level={{ .Values.operator.logLevel }}
          image: {{ .Values.operator.image.name }}:{{ .Values.operator.image.tag }}
          imagePullPolicy: {{ .Values.operator.image.pullPolicy }}
          name: {{ .Values.operator.name }}
          securityContext:
            allowPrivilegeEscalation: false
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 100m
              memory: 30Mi
            requests:
              cpu: 100m
              memory: 20Mi
          volumeMounts:
            - mountPath: /var/run
              name: dockersock
      terminationGracePeriodSeconds: 10
{{- end }}